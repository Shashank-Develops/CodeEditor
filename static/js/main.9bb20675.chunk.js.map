{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","open","setOpen","useState","React","createElement","className","concat","type","onClick","prevOpen","FontAwesomeIcon","icon","faCompressAlt","faExpandAlt","ControlledEditor","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","setValue","jsonValue","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAUe,SAASA,EAAOC,GAC7B,MAAM,SACJC,EAAQ,YACRC,EAAW,MACXC,EAAK,SACLC,GACEJ,GACGK,EAAMC,GAAWC,oBAAS,GAMjC,OACEC,IAAAC,cAAA,OAAKC,UAAS,oBAAAC,OAAsBN,EAAO,GAAK,cAC9CG,IAAAC,cAAA,OAAKC,UAAU,gBACZR,EACDM,IAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,sBACVG,QAASA,IAAMP,EAAQQ,IAAaA,IAEpCN,IAAAC,cAACM,IAAe,CAACC,KAAMX,EAAOY,IAAgBC,QAGlDV,IAAAC,cAACU,aAAgB,CACfC,eAjBN,SAAsBC,EAAQC,EAAMnB,GAClCC,EAASD,IAiBLA,MAAOA,EACPO,UAAU,sBACVa,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMzB,EACN0B,MAAO,WACPC,aAAa,MCxCR,SAASC,EAAgBC,EAAKC,GAC3C,MAAMC,EAHO,iBAGgBF,GAEtB3B,EAAO8B,GAAY1B,mBAAS,KACjC,MAAM2B,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAGAA,IAQX,OAJAQ,oBAAU,KACRJ,aAAaK,QAAQR,EAAaK,KAAKI,UAAUtC,KAChD,CAAC6B,EAAa7B,IAEV,CAACA,EAAO8B,GCsCFS,MAzDf,WACE,MAAOC,EAAMC,GAAWf,EAAgB,OAAQ,KACzCgB,EAAKC,GAAUjB,EAAgB,MAAO,KACtCkB,EAAIC,GAASnB,EAAgB,KAAM,KACnCoB,EAAQC,GAAa3C,mBAAS,IAiBrC,OAfAgC,oBAAU,KACR,MAAMY,EAAUC,WAAW,KACzBF,EAAU,8DAADvC,OAGGgC,EAAI,8BAAAhC,OACHkC,EAAG,gCAAAlC,OACFoC,EAAE,yCAGf,KAEH,MAAO,IAAMM,aAAaF,IACzB,CAACR,EAAME,EAAKE,IAGbvC,IAAAC,cAAAD,IAAA8C,SAAA,KACE9C,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAACV,EAAM,CACLE,SAAS,MACTC,YAAY,OACZC,MAAOwC,EACPvC,SAAUwC,IAEZpC,IAAAC,cAACV,EAAM,CACLE,SAAS,MACTC,YAAY,MACZC,MAAO0C,EACPzC,SAAU0C,IAEZtC,IAAAC,cAACV,EAAM,CACLE,SAAS,aACTC,YAAY,KACZC,MAAO4C,EACP3C,SAAU4C,KAGdxC,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,UACEwC,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCjDjBC,IAASC,OACPrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACiC,EAAG,OAENqB,SAASC,eAAe,W","file":"static/js/main.9bb20675.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen(prevOpen => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } \r\n    else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <h1>Output-:</h1>\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div> \n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}